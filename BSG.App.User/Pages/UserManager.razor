@page "/user"
@using BSG.App.User.Model
@using BSG.Common.DTO
@using BSG.Common.Model

@inject IUserState State

@inherits BsgComponentBase

@switch (State.ActiveFunction)
{
    case UserFunction.EditNew:
        <UserEdit Submit="@OnSubmit" Cancel="@OnCancel"></UserEdit>
        break;
    case UserFunction.List:
        <UserList OnEdit="@OnEdit" OnDelete="@OnDelete"></UserList>
        break;
}

@code {
    protected override void OnInitialized()
    {
        base.OnInitialized();

        State.ActiveFunction = UserFunction.List;
    }

    private void OnEdit()
    {
        State.ActiveFunction = State.Selected != null
            ? UserFunction.EditNew
            : UserFunction.List;
        
        StateHasChanged();
    }

    private void OnDelete()
    {
        if(State.Selected == null)
            return;

        State.Delete();
    }

    private void ShowList()
    {
        State.ActiveFunction = UserFunction.List;
        
        StateHasChanged();
    }

    private async Task OnSubmit(UserDto user)
    {
        _ = await State.Submit(user);

        State.Selected = [];
        ShowList();
    }

    private void OnCancel()
    {
        State.Selected = [];
        ShowList();
    }
}