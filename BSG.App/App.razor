@using System.Reflection
@using BSG.App.Common.Helpers
@using Microsoft.AspNetCore.Components.WebAssembly.Services
@using BSG.States

@inject IGeneralState GeneralState
@inject Bootstrap Bootstrap
@inject LazyAssemblyLoader AssemblyLoader

<Router AppAssembly="@typeof(App).Assembly"
        AdditionalAssemblies="@_assemblies"
        OnNavigateAsync="OnNavigateAsync">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)"/>
        <FocusOnNavigate RouteData="@routeData" Selector="h1"/>
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code {
    private List<Assembly> _assemblies = [];
    private bool _userAssemblyLoaded;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        _assemblies =
        [
            typeof(MainLayout).Assembly,
            //typeof(UserManager).Assembly
        ];

        GeneralState.Metadata = await Bootstrap.GetMetadata();
    }

    private async Task OnNavigateAsync(NavigationContext args)
    {
        try
        {
            if (args.Path.Equals("user", StringComparison.InvariantCultureIgnoreCase) && !_userAssemblyLoaded)
            {
                var assemblies = await AssemblyLoader.LoadAssembliesAsync(new[] {"BSG.App.User.wasm"});
                _assemblies.AddRange(assemblies);
                _userAssemblyLoaded = true;
            }
        }
        catch (Exception exception)
        {
            Console.WriteLine($"ERROR: {exception.Message}");
        }
    }
}
